import { useEffect, useState } from 'react';
import axios from 'axios';
import * as XLSX from 'xlsx';
import { useNavigate } from 'react-router';

const CustomerList = () => {
  const [customers, setCustomers] = useState([]);
  const [searchInput, setSearchInput] = useState('');
  const [filteredCustomers, setFilteredCustomers] = useState([]);
  const [showAddModal, setShowAddModal] = useState(false);
  const [selectedCustomer, setSelectedCustomer] = useState(null);
  const [newCustomer, setNewCustomer] = useState({
    cname: '',
    cphone: '',
    mailId: '',
    address: '',
    category: '',
    walletBal: 0
  });
  const [errors, setErrors] = useState({
    add: {},
    edit: {}
  });
  const [showSuccess, setShowSuccess] = useState(false);
  const [successMessage, setSuccessMessage] = useState('');
  const [loading, setLoading] = useState(true);

  const fetchCustomers = () => {
    setLoading(true);
    axios.get('http://localhost:5000/api/customers')
      .then(res => {
        setCustomers(res.data.customers || []);
        setFilteredCustomers(res.data.customers || []);
      })
      .catch(err => console.error(err))
      .finally(() => setLoading(false));
  };

  useEffect(() => {
    fetchCustomers();
  }, []);

  const validateForm = (formData, formType) => {
    const newErrors = {};
    
    if (!formData.cname.trim()) {
      newErrors.cname = 'Name is required';
    } else if (formData.cname.length < 3) {
      newErrors.cname = 'Name must be at least 3 characters';
    }

    if (!formData.cphone==="") {
      newErrors.cphone = 'Phone is required';
    } else if (!/^\d{10,10}$/.test(formData.cphone)) {
      newErrors.cphone = 'Enter a valid phone number';
    }

    if (formData.mailId && !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.mailId)) {
      newErrors.mailId = 'Enter a valid email address';
    }

    if (formData.walletBal === undefined || formData.walletBal === '') {
      newErrors.walletBal = 'Wallet balance is required';
    } else if (isNaN(formData.walletBal)) {
      newErrors.walletBal = 'Must be a valid number';
    }

    setErrors(prev => ({ ...prev, [formType]: newErrors }));
    return Object.keys(newErrors).length === 0;
  };

  const handleSearch = () => {
    const filtered = customers.filter(cust =>
      cust.cphone.toString().includes(searchInput) ||
      cust.cname.toLowerCase().includes(searchInput.toLowerCase())
    );
    setFilteredCustomers(filtered);
  };

  const handleDelete = async (id) => {
    if (window.confirm('Are you sure you want to delete this customer?')) {
      try {
        await axios.delete(`http://localhost:5000/api/customers/delete/${id}`);
        fetchCustomers();
        setSuccessMessage('Customer deleted successfully!');
        setShowSuccess(true);
        setTimeout(() => setShowSuccess(false), 3000);
      } catch (error) {
        console.error('Delete failed:', error);
      }
    }
  };



  const downloadExcel = () => {
    const worksheet = XLSX.utils.json_to_sheet(filteredCustomers);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, 'Customers');
    XLSX.writeFile(workbook, 'CustomerList.xlsx');
  };


  // Soft UI Styles
  const cardStyle = {
    borderRadius: '12px',
    boxShadow: '0 4px 24px rgba(0,0,0,0.06)',
    border: 'none',
    overflow: 'hidden',
    backgroundColor: '#ffffff'
  };

  const tableHeaderStyle = {
    backgroundColor: '#f8fafc',
    color: '#4b5563',
    fontWeight: '600',
    borderBottom: '1px solid #e5e7eb'
  };

  const tableRowStyle = {
    backgroundColor: '#ffffff',
    borderBottom: '1px solid #f3f4f6',
    transition: 'all 0.2s ease'
  };

  const inputStyle = {
    backgroundColor: '#f9fafb',
    border: '1px solid #e5e7eb',
    borderRadius: '8px',
    padding: '10px 12px',
    fontSize: '14px',
    transition: 'all 0.2s ease'
  };

  const errorStyle = {
    color: '#ef4444',
    fontSize: '13px',
    marginTop: '4px'
  };

  return (
    <div className="container-fluid py-4" style={{ backgroundColor: '#f9fafb', minHeight: '100vh' }}>
      {/* Success Notification */}
      {showSuccess && (
        <div className="position-fixed top-4 start-50 translate-middle-x z-3">
          <div 
            className="alert alert-success d-flex align-items-center shadow-sm" 
            role="alert"
            style={{ 
              borderRadius: '10px',
              minWidth: '300px',
              borderLeft: '4px solid #10b981',
              animation: 'fadeIn 0.3s ease-in-out'
            }}
          >
            <i className="bi bi-check-circle-fill me-2"></i>
            <div>{successMessage}</div>
          </div>
        </div>
      )}

      {/* Page Header */}
      <div className="row mb-4">
        <div className="col-12">
          <div className="card" style={cardStyle}>
            <div className="card-body p-4 d-flex justify-content-between align-items-center">
              <div>
                <h2 className="mb-1" style={{ color: '#111827', fontWeight: '600' }}>
                  <i className="bi bi-people-fill me-2" style={{ color: '#4f46e5' }}></i>
                  Customer Management
                </h2>
                <p className="mb-0" style={{ color: '#6b7280' }}>
                  Manage your customer database efficiently
                </p>
              </div>

            </div>
          </div>
        </div>
      </div>

      {/* Search and Export Card */}
      <div className="row mb-4">
        <div className="col-12">
          <div className="card" style={cardStyle}>
            <div className="card-body p-4">
              <div className="row g-3 align-items-center">
                <div className="col-md-8">
                  <div className="input-group" style={{ borderRadius: '8px', overflow: 'hidden' }}>
                    <span 
                      className="input-group-text bg-white border-end-0" 
                      style={{ padding: '0 16px' }}
                    >
                      <i className="bi bi-search" style={{ color: '#9ca3af' }}></i>
                    </span>
                    <input
                      type="text"
                      className="form-control border-start-0"
                      placeholder="Search by name or phone"
                      value={searchInput}
                      onChange={(e) => {
                        setSearchInput(e.target.value);
                        const val = e.target.value;
                        const filtered = customers.filter(cust =>
                          cust.cphone.toString().includes(val) ||
                          cust.cname.toLowerCase().includes(val.toLowerCase())
                        );
                        setFilteredCustomers(filtered);
                      }}
                      style={{ 
                        ...inputStyle,
                        borderLeft: 'none',
                        borderTopLeftRadius: '0',
                        borderBottomLeftRadius: '0'
                      }}
                    />
                  </div>
                </div>
                <div className="col-md-4 d-flex justify-content-end">
                  <button 
                    className="btn d-flex align-items-center"
                    onClick={downloadExcel}
                    style={{
                      backgroundColor: '#ffffff',
                      color: '#4f46e5',
                      borderRadius: '8px',
                      padding: '10px 16px',
                      fontWeight: '500',
                      border: '1px solid #e5e7eb',
                      gap: '8px',
                      boxShadow: '0 2px 6px rgba(0, 0, 0, 0.05)'
                    }}
                  >
                    <i className="bi bi-file-earmark-excel"></i>
                    Export Excel
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Customers Table Card */}
      <div className="row">
        <div className="col-12">
          <div className="card" style={cardStyle}>
            <div className="card-body p-0">
              {loading ? (
                <div className="d-flex justify-content-center align-items-center p-5">
                  <div className="spinner-border text-primary" role="status">
                    <span className="visually-hidden">Loading...</span>
                  </div>
                </div>
              ) : (
                <div className="table-responsive">
                  <table className="table table-bordered ">
                    <thead>
                      <tr style={tableHeaderStyle}>
                        <th className="ps-4" style={{ width: '10%' }}>ID</th>
                        <th style={{ width: '15%' }}>Name</th>
                        <th style={{ width: '12%' }}>Phone</th>
                        <th style={{ width: '18%' }}>Email</th>
                        <th style={{ width: '20%' }}>Address</th>
                        <th style={{ width: '10%' }}>Type</th>
                        <th style={{ width: '10%' }}>Wallet</th>
                      </tr>
                    </thead>
                    <tbody>
                      {filteredCustomers.length > 0 ? (
                        filteredCustomers.map(cust => (
                          <tr 
                            key={cust.customerId} 
                            style={tableRowStyle}
                            className="hover-effect"
                          >
                            <td className="ps-4 fw-semibold" style={{ color: '#4b5563' }}>
                              {cust.customerId}
                            </td>
                            <td>{cust.cname}</td>
                            <td>{cust.cphone}</td>
                            <td>{cust.mailId || '-'}</td>
                            <td>{cust.address || '-'}</td>
                            <td>
                                {cust.category}
                            </td>
                            <td>
                              <span className="fw-medium" style={{ color: 'red' }}>
                                ₹{cust.walletBal.toFixed(2)||0}
                              </span>
                            </td>
                          
                          </tr>
                        ))
                      ) : (
                        <tr>
                          <td colSpan="8" className="text-center py-5">
                            <div className="d-flex flex-column align-items-center">
                              <i 
                                className="bi bi-people" 
                                style={{ 
                                  fontSize: '48px',
                                  color: '#d1d5db',
                                  marginBottom: '16px'
                                }}
                              ></i>
                              <h5 className="mb-2" style={{ color: '#6b7280' }}>
                                No customers found
                              </h5>
                              {searchInput && (
                                <button 
                                  className="btn btn-sm mt-2"
                                  onClick={() => {
                                    setSearchInput('');
                                    setFilteredCustomers(customers);
                                  }}
                                  style={{
                                    backgroundColor: '#f3f4f6',
                                    color: '#4b5563',
                                    borderRadius: '6px',
                                    padding: '5px 12px',
                                    fontSize: '13px',
                                    border: 'none'
                                  }}
                                >
                                  Clear search
                                </button>
                              )}
                            </div>
                          </td>
                        </tr>
                      )}
                    </tbody>
                  </table>
                </div>
              )}
            </div>
            {filteredCustomers.length > 0 && (
              <div className="card-footer bg-white border-top-0 py-3 px-4">
                <div className="d-flex justify-content-between align-items-center">
                  <div style={{ color: '#6b7280', fontSize: '14px' }}>
                    Showing <strong>{filteredCustomers.length}</strong> of <strong>{customers.length}</strong> customers
                  </div>
                  {searchInput && (
                    <button 
                      className="btn btn-sm"
                      onClick={() => {
                        setSearchInput('');
                        setFilteredCustomers(customers);
                      }}
                      style={{
                        backgroundColor: '#f3f4f6',
                        color: '#4b5563',
                        borderRadius: '6px',
                        padding: '5px 12px',
                        fontSize: '13px',
                        border: 'none'
                      }}
                    >
                      Clear filters
                    </button>
                  )}
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
           
        </div>
  );
};

export default CustomerList;
